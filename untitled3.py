# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hfs4OrcLB9FNZ7sMlu81vKzZwULPgIHW
"""

import streamlit as st
import google.generativeai as genai
import PyPDF2
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.vectorstores import Chroma
from langchain.embeddings import OpenAIEmbeddings
import os

# Configure Gemini API
GOOGLE_API_KEY = "AIzaSyA-MMwUnohkXNr91p7WazpxuM66k_V0MiM"  # Replace with your key
os.environ["GOOGLE_API_KEY"] = GOOGLE_API_KEY
genai.configure(api_key=GOOGLE_API_KEY)

def extract_text_from_pdf(pdf_file):
    reader = PyPDF2.PdfReader(pdf_file)
    text = "\n".join([page.extract_text() for page in reader.pages if page.extract_text()])
    return text

def process_text_with_gemini(text):
    # Example processing with Gemini (Modify as per your model usage)
    response = genai.Completion.create(model="gemini-pro", prompt=text, max_tokens=200)
    return response["choices"][0]["text"]

st.title("AI-Powered PDF Processing App")
st.write("Upload a PDF and get AI-generated insights.")

uploaded_file = st.file_uploader("Upload PDF", type=["pdf"])

if uploaded_file:
    with st.spinner("Extracting text..."):
        text = extract_text_from_pdf(uploaded_file)

    st.text_area("Extracted Text", text, height=300)

    if st.button("Analyze with AI"):
        with st.spinner("Processing with AI..."):
            ai_response = process_text_with_gemini(text)
        st.subheader("AI Response:")
        st.write(ai_response)